---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: kafkaaccessqueries.accessmonitor.masorange.com
spec:
  group: accessmonitor.masorange.com
  names:
    kind: KafkaAccessQuery
    listKind: KafkaAccessQueryList
    plural: kafkaaccessqueries
    singular: kafkaaccessquery
    shortNames:
      - kmon
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.totalPodsScanned
      name: Pods Scanned
      type: integer
    - jsonPath: .status.totalPodsWithKafkaAccess
      name: Found Access
      type: integer
    - jsonPath: .status.lastUpdateTime
      name: Last Update
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KafkaAccessQuery is the Schema for the kafkaaccessqueries API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              KafkaAccessQuerySpec defines the desired state of KafkaAccessQuery
              This is where users will specify what the operator should monitor or query.
            properties:
              aiAnalysisEnabled:
                description: |-
                  AIAnalysisEnabled controls whether the AI analysis feature is active.
                  If not specified, the controller will default to true.
                type: boolean
              configMapKeys:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: |-
                  ConfigMapKeys specifies ConfigMaps and keys within their data to scan for broker endpoints.
                  The map key is the ConfigMap name, and the value is a list of data keys within that ConfigMap.
                  The operator will look for these ConfigMaps in the same namespace as the Pods being inspected,
                  or you might decide on a central namespace for common ConfigMaps.
                type: object
              environmentVariableNames:
                description: |-
                  EnvironmentVariableNames lists common environment variable names that might contain Kafka bootstrap servers.
                  Example: ["KAFKA_BOOTSTRAP_SERVERS", "BOOTSTRAP_SERVERS", "KAFKA_URL"]
                items:
                  type: string
                type: array
              errorLogScanInterval:
                description: |-
                  ErrorLogScanInterval defines how far back in time to scan for errors in pod logs.
                  Use Go duration format string (e.g., "1h", "10m"). Defaults to a controller-defined value if empty.
                type: string
              kafkaBrokerPattern:
                description: |-
                  KafkaBrokerPattern is a string pattern (e.g., part of a hostname or a regex if your controller supports it)
                  to search for in configurations to identify Kafka broker endpoints.
                type: string
              namespaceSelector:
                description: |-
                  NamespaceSelector specifies the namespaces to analyze for Kafka access.
                  If empty or nil, all namespaces where the operator has RBAC permissions might be considered,
                  or a default set depending on controller logic.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              podSelector:
                description: |-
                  PodSelector specifies labels to filter Pods within the selected namespaces.
                  If empty or nil, all pods in the selected namespaces might be considered.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              requeueInterval:
                description: |-
                  RequeueInterval specifies the desired interval between periodic reconciliations/queries.
                  Use Go duration format string (e.g., "1h", "30m", "5m").
                  If empty or invalid, the controller will use a default internal value.
                type: string
            type: object
          status:
            description: |-
              KafkaAccessQueryStatus defines the observed state of KafkaAccessQuery
              This is where your operator will write the results of its findings.
            properties:
              accessingPods:
                description: AccessingPods lists the pods found to be configured to
                  access Kafka brokers based on the spec.
                items:
                  description: |-
                    PodAccessInfo holds the details of a detected Kafka access from a specific pod/container.
                    PodAccessInfo holds the details of a detected Kafka access from a specific pod/container.
                    The order of fields here determines the desired display order in the CR's status YAML.
                  properties:
                    additionalConfig:
                      additionalProperties:
                        type: string
                      description: AdditionalConfig holds other relevant Kafka properties
                        found in the configuration.
                      type: object
                    authorizedRoles:
                      description: |-
                        AuthorizedRoles is the list of roles associated with this service account.
                        (Placeholder for now, as it's not in the current CM example)
                      items:
                        type: string
                      type: array
                    authorizedTenants:
                      description: AuthorizedTenants is the list of tenant organizations
                        this service account has access to.
                      items:
                        type: string
                      type: array
                    autoCommit:
                      description: AutoCommit indicates if the consumer is configured
                        to auto-commit offsets.
                      type: boolean
                    autoOffsetReset:
                      description: AutoOffsetReset policy for consumers (e.g., "earliest",
                        "latest"), if found.
                      type: string
                    clientId:
                      description: ClientID is the Kafka producer client ID, if found.
                      type: string
                    clientType:
                      description: ClientType indicates if the client is inferred
                        to be a "Consumer" or "Producer".
                      type: string
                    containerName:
                      description: Name of the container. Can be a regular or init
                        container.
                      type: string
                    detectedBrokerEndpoints:
                      description: DetectedBrokerEndpoints is a list of Kafka broker
                        addresses found.
                      items:
                        type: string
                      type: array
                    groupId:
                      description: GroupID is the Kafka consumer group ID, if found.
                      type: string
                    maxPollIntervalMs:
                      type: integer
                    maxPollRecords:
                      type: integer
                    namespace:
                      description: Namespace of the pod where Kafka access was detected.
                      type: string
                    podName:
                      description: Name of the pod.
                      type: string
                    preferredUserName:
                      description: PreferredUserName  is a transformed version of
                        the ServiceAccountEmail,
                      type: string
                    recentProblems:
                      description: RecentProblems is a list of recent Warning events
                        or ERROR/WARN log entries found for this pod.
                      items:
                        description: ProblemDetail holds structured information about
                          a single unique problem.
                        properties:
                          aiAnalysis:
                            description: AIAnalysis stores the analysis received from
                              the AI service.
                            type: string
                          brokerCpuUtilization:
                            description: BrokerCPUUtilization stores the CPU usage
                              of the associated broker as a string.
                            type: string
                          brokerLogSnippets:
                            description: |-
                              BrokerLogSnippets contains relevant log entries found on the Kafka broker
                              that might be related to this problem.
                            items:
                              type: string
                            type: array
                          brokerNetworkBytesIn:
                            description: BrokerNetworkBytesIn stores the network traffic
                              received by the broker as a string.
                            type: string
                          brokerUnderReplicated:
                            description: BrokerUnderReplicated stores the number of
                              under-replicated partitions of the broker.
                            format: int64
                            type: integer
                          count:
                            description: Count is how many times this exact problem
                              has occurred.
                            format: int32
                            type: integer
                          lastSeenTimestamp:
                            description: LastSeenTimestamp is the timestamp of the
                              last time this problem was observed.
                            format: date-time
                            type: string
                          message:
                            description: Message is the unique, deduplicated error
                              or warning message.
                            type: string
                          type:
                            description: Type is the severity of the problem (e.g.,
                              Warning, Error).
                            enum:
                            - Warning
                            - Error
                            - Panic
                            type: string
                        required:
                        - count
                        - lastSeenTimestamp
                        - message
                        - type
                        type: object
                      type: array
                    schemaRegistryUrl:
                      description: SchemaRegistryURL is the URL for the Kafka Schema
                        Registry, if found.
                      type: string
                    serviceAccountEmail:
                      description: ServiceAccountEmail is the client_email extracted
                        from the related authn secret.
                      type: string
                    sourceOfEndpoint:
                      description: SourceOfEndpoint describes how the broker endpoint
                        was found (e.g., env, configmap-key).
                      type: string
                    topics:
                      description: Topics is a list of structured topic information
                        associated with this client.
                      items:
                        description: TopicInfo holds structured data about a Kafka
                          topic.
                        properties:
                          cluster:
                            type: string
                          domain:
                            type: string
                          subject:
                            type: string
                          version:
                            type: string
                        type: object
                      type: array
                  required:
                  - namespace
                  - podName
                  type: object
                type: array
              conditions:
                description: Conditions represent the latest available observations
                  of the KafkaAccessQuery's state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastUpdateTime:
                description: LastUpdateTime is the last time the access query was
                  performed and status updated.
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration reflects the .metadata.generation
                  that the status was based on.
                format: int64
                type: integer
              totalPodsScanned:
                description: TotalPodsScanned is the total number of pods scanned
                  in the last reconciliation.
                type: integer
              totalPodsWithKafkaAccess:
                description: TotalPodsWithKafkaAccess is the total number of pods
                  found with Kafka access configurations.
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
